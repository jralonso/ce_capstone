---
- name: Get cloudformation info from stack
  import_playbook: get-hosts.yml

# Create K8s deployment
- name: Create or redeploy on K8s minikube 
  hosts: just_created
  tasks:
  - name: Check if app is deployed
    shell: kubectl get deployment hello-nodeapp
    register: is_deployed
    become: yes
    ignore_errors: yes
  
  # - debug: var=is_deployed.stdout_lines
  - debug: var=is_deployed

  - name: Create deployment (only if was not deployed)
    shell: kubectl create deployment hello-nodeapp --image=jralonso/hello-nodeapp:latest
    register: create_deployment
    become: yes
    when: "'NotFound' in is_deployed.stderr"

  # - debug: var=create_deployment.stdout_lines  
  - debug: var=create_deployment

  - name: Update deployment (only if was deployed)
    shell: kubectl set image deployments/hello-nodeapp hello-nodeapp=jralonso/hello-nodeapp:latest
    register: update_deployment
    become: yes
    when: "'NotFound' not in is_deployed.stderr"
    #ignore_errors: yes

  # - debug: var=update_deployment.stdout_lines  
  - debug: var=update_deployment

  - name: Escale replicas to 4
    shell: kubectl scale deployment hello-nodeapp --replicas=4
    register: scale_deployment
    become: yes    
    
  - debug: var=scale_deployment

  - name: Expose deployment (only if was not deployed)
    shell: /usr/local/bin/kubectl expose deployment hello-nodeapp --type=LoadBalancer --port=5000
    register: expose
    become: yes
    when: "'NotFound' in is_deployed.stderr"

  - debug: var=expose.stdout_lines

  - name: Describe service
    shell: /usr/local/bin/kubectl describe service hello-nodeapp
    register: service
    become: yes

  - debug: var=service.stdout_lines

  # - name: Publish service
  #   shell: /usr/local/bin/minikube service hello-node
  #   register: publishing 
  #   become: yes

  # - debug: var=publishing.stdout_lines