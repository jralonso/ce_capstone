---
- name: Get cloudformation info from stack
  import_playbook: get-hosts.yml

# Create K8s deployment
- name: Create or redeploy on K8s minikube 
  hosts: just_created
  tasks:
  - name: Check if app is deployed
    shell: kubectl get deployment hello-nodeapp
    register: deployed
    become: yes
    ignore_errors: yes
  
  - debug: var=deployed.stdout_lines
  - debug: var=deployed

  - name: Create deployment
    shell: /usr/local/bin/kubectl create deployment hello-nodeapp --image=jralonso/hello-nodeapp:master-latest
    register: create_deployment
    become: yes
    when: "'FAILED' in deployed.stderr"

  - debug: var=create_deployment.stdout_lines  
  - debug: var=create_deployment

  - name: Update deployment
    shell: /usr/local/bin/kubectl set image deployments/hello-nodeapp hello-nodeapp=jralonso/hello-nodeapp:master-latest
    register: update_deployment
    become: yes
    when: "'FAILED' not in deployed.stderr"
    #ignore_errors: yes

  - debug: var=update_deployment.stdout_lines  
  - debug: var=update_deployment

  - name: Expose deployment
    shell: /usr/local/bin/kubectl expose deployment hello-nodeapp --type=LoadBalancer --port=5000
    register: expose
    become: yes

  - debug: var=expose.stdout_lines

  - name: Describe service
    shell: /usr/local/bin/kubectl describe service hello-nodeapp
    register: service
    become: yes

  - debug: var=service.stdout_lines

  # - name: Publish service
  #   shell: /usr/local/bin/minikube service hello-node
  #   register: publishing 
  #   become: yes

  # - debug: var=publishing.stdout_lines